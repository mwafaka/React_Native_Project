{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MovieDisplay = function MovieDisplay(_ref) {\n  var id = _ref.id;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(`https://www.omdbapi.com/?i=${id}&apikey=4a3b711b`);\n          var data = yield response.json();\n          setState(data);\n        } catch (error) {\n          console.error('Error fetching movie data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [id]);\n  console.log(state);\n  var handleLinkPress = function handleLinkPress() {\n    var url = state.Poster;\n    Linking.openURL(url).catch(function (err) {\n      return console.error('An error occurred', err);\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.movie,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(Image, {\n          source: {\n            uri: state.Poster\n          },\n          style: styles.cardImage\n        }), _jsxs(View, {\n          style: styles.cardBody,\n          children: [_jsx(Text, {\n            style: styles.cardTitle,\n            children: state.Title\n          }), _jsxs(Text, {\n            style: styles.cardText,\n            children: [\"BoxOffice: \", state.BoxOffice]\n          }), _jsxs(Text, {\n            style: styles.cardText,\n            children: [\"Country: \", state.Country]\n          }), _jsx(Pressable, {\n            style: styles.button,\n            onPress: handleLinkPress,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Go somewhere\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  movie: {\n    padding: 10\n  },\n  card: {\n    width: '18rem',\n    backgroundColor: '#ffffff',\n    borderRadius: 10,\n    elevation: 5,\n    padding: 10\n  },\n  cardImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 10\n  },\n  cardBody: {\n    marginTop: 10\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  cardText: {\n    fontSize: 16\n  }\n});\nexport default MovieDisplay;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Pressable","Linking","jsx","_jsx","jsxs","_jsxs","MovieDisplay","_ref","id","_useState","_useState2","_slicedToArray","state","setState","fetchData","_ref2","_asyncToGenerator","response","fetch","data","json","error","console","apply","arguments","log","handleLinkPress","url","Poster","openURL","catch","err","style","styles","container","children","movie","card","source","uri","cardImage","cardBody","cardTitle","Title","cardText","BoxOffice","Country","button","onPress","buttonText","create","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","color","fontWeight","padding","width","elevation","height","marginTop","fontSize"],"sources":["/home/dci/Desktop/React_Native_Project/my-app/components/MovieDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, StyleSheet, Pressable, Linking } from 'react-native';\n\nconst MovieDisplay = ({ id }) => {\n    const [state, setState] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(\n                    `https://www.omdbapi.com/?i=${id}&apikey=4a3b711b`\n                );\n                const data = await response.json();\n                setState(data);\n            } catch (error) {\n                console.error('Error fetching movie data:', error);\n            }\n        };\n\n        fetchData();\n    }, [id]);\n\n    console.log(state);\n    const handleLinkPress = () => {\n        const url =state.Poster; // Replace with your desired link URL\n        Linking.openURL(url).catch((err) => console.error('An error occurred', err));\n    };\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.movie}>\n                <View style={styles.card}>\n                    <Image source={{ uri: state.Poster }} style={styles.cardImage} />\n                    <View style={styles.cardBody}>\n                        <Text style={styles.cardTitle}>{state.Title}</Text>\n                        <Text style={styles.cardText}>BoxOffice: {state.BoxOffice}</Text>\n                        <Text style={styles.cardText}>Country: {state.Country}</Text>\n                        {/* You can use TouchableOpacity instead of <a> tag in React Native */}\n                        <Pressable style={styles.button} onPress={handleLinkPress}>\n                            <Text style={styles.buttonText}>Go somewhere</Text>\n                        </Pressable>\n                    </View>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    button: {\n        backgroundColor: '#007bff',\n        paddingHorizontal: 20,\n        paddingVertical: 10,\n        borderRadius: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    movie: {\n        padding: 10,\n    },\n    card: {\n        width: '18rem',\n\n        backgroundColor: '#ffffff',\n        borderRadius: 10,\n        elevation: 5,\n        padding: 10,\n    },\n    cardImage: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n    },\n    cardBody: {\n        marginTop: 10,\n    },\n    cardTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    cardText: {\n        fontSize: 16,\n    },\n    // button: {\n    //   backgroundColor: '#dc3545',\n    //   paddingHorizontal: 20,\n    //   paddingVertical: 10,\n    //   borderRadius: 5,\n    // },\n    // buttonText: {\n    //   color: 'white',\n    //   fontWeight: 'bold',\n    // },\n});\n\nexport default MovieDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}