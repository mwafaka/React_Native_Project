{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport demoContext from \"../demoContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Search = function Search() {\n  var _useContext = useContext(demoContext),\n    fetchData = _useContext.fetchData;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var onSubmit = function onSubmit() {\n    fetchData(searchText);\n    setSearchText('');\n  };\n  return _jsxs(View, {\n    style: styles.searchContainer,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      value: searchText,\n      onChangeText: function onChangeText(text) {\n        return setSearchText(text);\n      },\n      placeholder: \"Enter movie name\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: onSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Search\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n    marginRight: 10\n  },\n  button: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default Search;","map":{"version":3,"names":["React","useContext","useState","View","TextInput","TouchableOpacity","Text","StyleSheet","demoContext","jsx","_jsx","jsxs","_jsxs","Search","_useContext","fetchData","_useState","_useState2","_slicedToArray","searchText","setSearchText","onSubmit","style","styles","searchContainer","children","input","value","onChangeText","text","placeholder","button","onPress","buttonText","create","flexDirection","alignItems","margin","flex","height","borderColor","borderWidth","paddingHorizontal","borderRadius","marginRight","backgroundColor","paddingVertical","color","fontWeight"],"sources":["/home/dci/Desktop/React_Native_Project/my-app/components/Search.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { View, TextInput, TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport demoContext from '../demoContext';\n\nconst Search = () => {\n  const { fetchData } = useContext(demoContext);\n  const [searchText, setSearchText] = useState('');\n\n  const onSubmit = () => {\n    fetchData(searchText);\n    setSearchText('');\n  };\n\n  return (\n    <View style={styles.searchContainer}>\n      <TextInput\n        style={styles.input}\n        value={searchText}\n        onChangeText={(text) => setSearchText(text)}\n        placeholder=\"Enter movie name\"\n      />\n      <TouchableOpacity style={styles.button} onPress={onSubmit}>\n        <Text style={styles.buttonText}>Search</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n    marginRight: 10,\n  },\n  button: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default Search;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEpD,OAAOC,WAAW;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAAC,WAAA,GAAsBb,UAAU,CAACO,WAAW,CAAC;IAArCO,SAAS,GAAAD,WAAA,CAATC,SAAS;EACjB,IAAAC,SAAA,GAAoCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBN,SAAS,CAACI,UAAU,CAAC;IACrBC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,OACER,KAAA,CAACT,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,GAClCf,IAAA,CAACN,SAAS;MACRkB,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,KAAK,EAAER,UAAW;MAClBS,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKT,aAAa,CAACS,IAAI,CAAC;MAAA,CAAC;MAC5CC,WAAW,EAAC;IAAkB,CAC/B,CAAC,EACFpB,IAAA,CAACL,gBAAgB;MAACiB,KAAK,EAAEC,MAAM,CAACQ,MAAO;MAACC,OAAO,EAAEX,QAAS;MAAAI,QAAA,EACxDf,IAAA,CAACJ,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACU,UAAW;QAAAR,QAAA,EAAC;MAAM,CAAM;IAAC,CAC7B,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGhB,UAAU,CAAC2B,MAAM,CAAC;EAC/BV,eAAe,EAAE;IACfW,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACV,CAAC;EACDX,KAAK,EAAE;IACLY,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE;EACf,CAAC;EACDb,MAAM,EAAE;IACNc,eAAe,EAAE,SAAS;IAC1BH,iBAAiB,EAAE,EAAE;IACrBI,eAAe,EAAE,EAAE;IACnBH,YAAY,EAAE;EAChB,CAAC;EACDV,UAAU,EAAE;IACVc,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAenC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}